public class self_homework31 {
    public static void main(String[] args){
        // while 循环的执行流程
        /*
        * 格式：
        * 初始化语句；
        * while（条件判断语句）{
        *   循环体语句；
        *   条件控制语句；
        * }
        * 循环下面的其他语句*/

        // 初始化语句只执行一次
        // 判断语句为true，循环继续
        // 判断语句为false，循环结束


        //练习1 需求：利用while循环打印1-100

        int i = 1;  // 初始化语句
        while(i <= 100){
            System.out.println(i);
            i++;
        }
        System.out.println("--------------------");

        // for 和 while的对比
        /*
        * 相同点：运行规则都一样的
        *
        * 第一区别：for 和while的区别
        * for循环中，控制循环的变量，因为归属于for循环的语法结构中，
        * 在for循环结束后，就不能再次被访问到了。
        * while循环中，控制循环的变量，对于while循环来说不归属其语法结构中，
        * 在while循环结束后，该变量还可以继续使用。
        *
        * 第二区别：
        * for循环中：知道循环次数或者循环范围
        * while循环：不知道循环的次数和范围，只知道循环的结束条件。
        * */


        //练习 打印折纸的次数  《斯坦福练习》
        /*
        * 需求；世界最高山峰是珠穆朗玛峰（8844.43米 = 8844430毫米），假如
        * 我有一张足够大的纸，它的厚度是0.1毫米。
        * 请问，我折叠多少次，可以折成珠穆朗玛峰的高度？*/


        //分析：折叠纸张：每一次折叠纸张的厚度都是原先的2倍
        // double a = 0.1;
        // a = a * 2;
        // a *= 2;

        //1.定义一个变量来记录山峰的高度
        double height = 8844430;
        //2.定义一个变量用来记录纸张的初始厚度
        double paper = 0.1;
        //3.定义一个变量来统计次数
        int count = 0;
        //4.循环折叠纸张，只要纸张的厚度小于山峰的高度，那么循环就继续
        // 每折叠一次，统计次数就要++
        // 选择while循环：我们目前不知道循环的次数和循环的范围，只知道循环的结束条件，所以用while。
        while(paper < height){
            paper = paper * 2;
            count++;
        }
        // 当循环结束之后，count记录的值就是折叠的次数
        System.out.println(count);
    }
}
