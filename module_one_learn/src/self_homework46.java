public class self_homework46 {
    public static void main(String[] args){
        // 数组的动态初始化
        // 动态初始化：初始化时只指定数组的长度，由系统为数组分配初始值
        // 格式：数据类型[] 数组名 = new 数据类型[数组长度];
        // 范例：int[] arr = new int[3];

        // 练习 定义一个数组，用来存储班级中50个学生的姓名
        // 姓名未知，等学生报道后，再进行添加

        // 1.定义一个数组
        String[] arr = new String[50];

        // 2.添加学生
        arr[0] = "张三";
        arr[1] = "李四";

        // 获取
        System.out.println(arr[0]); // 张三
        System.out.println(arr[1]); // 李四
        System.out.println(arr[2]); // null  (数组的默认初始化值)


        // 数组的默认初始化值
        // 整数类型：默认初始化值0
        // 小数类型：默认初始化值0.0
        // 字符类型：默认初始化值'/u0000'  打出来的话就是 一个空格
        // 布尔类型：默认初始化值false
        // 引用类型：默认初始化值null


        // 数组静态初始化和动态初始化的区别
        /*
        * 动态初始化：手动指定数组的长度，由系统给出默认初始化值。
        * 只明确元素个数，不明确具体数值，推荐使用动态初始化
        *
        * 静态初始化：手动指定数组元素，系统会根据元素个数，计算出数组的长度。
        * 需求中已经明确了要操作的具体数据，直接静态初始化即可*/


        // 注意：数组中常出现的问题--->索引越界异常
        // 原因：访问了不存在的索引
        // 避免：知道索引的范围
    }
}
